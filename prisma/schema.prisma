datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts          Post[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id  Int @id @unique @default(autoincrement()) 
  title String
  content String
  author User? @relation(fields:[authorId],references:[id])
  authorId String?
  viewCount Int @default(0)
  likeCount Int @default(0)
  upvotesCount Int @default(0)
  commentsCount Int @default(0)
  createdAt DateTime @default(now())
  tags Tag[]
  comments Comment[]
  upvotes Upvote[]
}


model Tag {
  name String @id
  posts Post[]
}

model Comment {
 id Int @id @unique @default(autoincrement()) 
 createdAt DateTime @default(now())
 post Post? @relation(fields:[postId],references:[id])
 postId Int
 content String
 author String
 authorImage String?
 upvotesCount Int @default(0)
 downvotesCount Int @default(0)
 thumbsUp Thumbup[]
 thumbsDown Thumbdown[]
}

model Upvote{
  id            Int      @id @default(autoincrement())
  post      Post @relation(fields: [postId], references: [id])
  postId    Int
  votedBy   String
}

model Thumbup{
  id      Int      @id @default(autoincrement())
  comment  Comment? @relation(fields: [commentId], references: [id],onDelete: Cascade)
  commentId  Int?
  votedBy  String
}

model Thumbdown{
  id      Int      @id @default(autoincrement())
  comment  Comment? @relation(fields: [commentId], references: [id],onDelete: Cascade)
  commentId  Int?
  votedBy  String
}